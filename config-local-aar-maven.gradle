/*
 * ************************************************************
 * 文件：config-local-aar-maven.gradle  模块：ElegantBus  项目：ElegantBus
 * 当前修改时间：2020年06月17日 13:59:33
 * 上次修改时间：2020年06月17日 02:37:32
 * 作者：Cody.yi   https://github.com/codyer
 *
 * 描述：ElegantBus
 * Copyright (c) 2020
 * ************************************************************
 */
apply plugin: 'maven'
def groupId = LOCAL_GROUP_ID + '.' + this.parent.getName()
// 包含变体的 aar 上传
uploadArchives() {
    repositories {
        mavenDeployer {
            repository(url: LOCAL_REPOSITORY)
            android.libraryVariants.all { variant ->
                def isFlavor = !variant.flavorName.isEmpty()
                def variantName = "${variant.name}"
                if (!variantName.contains("Release")) {
                    return
                }
                variantName = variantName.replaceAll("Release", "")
                // 生成多个pom
                addFilter(variantName) { artifact, file ->
                    true
                }

                pom(variantName).groupId = groupId
                pom(variantName).artifactId = this.parent.getName() + '-' + this.getName() + "-" + variantName
                pom(variantName).version = rootProject.ext.componentVersion // 版本号
                pom(variantName).packaging = 'aar'
                // 自定义pom的依赖集
                pom(variantName).withXml {
                    def root = asNode()
                    def dependencyNodes = root["dependencies"][0] ?: root.appendNode("dependencies")
                    def addDep = {
                        if (it.group == null) return // Avoid empty dependency nodes
                        def dependencyNode = dependencyNodes.appendNode('dependency')
                        if (it.version == "unspecified") {
                            dependencyNode.appendNode('groupId', groupId)
                            dependencyNode.appendNode('artifactId', this.parent.getName() + '-' + it.name)
                            dependencyNode.appendNode('version', rootProject.ext.componentVersion)
                        } else {
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                        if (it.hasProperty('optional') && it.optional) {
                            dependencyNode.appendNode('optional', 'true')
                        }
                    }
                    // 添加基本依赖
//                    configurations.api.allDependencies.each addDep
                    configurations.implementation.allDependencies.each addDep
                    // 添加特殊依赖
                    if (isFlavor) {
                        configurations["${variantName}Implementation"].allDependencies.each addDep
                        def flavorName = variant.flavorName
                        configurations["${flavorName}Implementation"].allDependencies.each addDep
                        configurations["${variantName}Api"].allDependencies.each addDep
                        configurations["${flavorName}Api"].allDependencies.each addDep
                    }
                }
            }
        }
    }
}
