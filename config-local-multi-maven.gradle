/*
 * ************************************************************
 * 文件：config-local-multi-maven.gradle  模块：ElegantBus  项目：ElegantBus
 * 当前修改时间：2020年06月18日 22:57:20
 * 上次修改时间：2020年06月18日 22:14:10
 * 作者：Cody.yi   https://github.com/codyer
 *
 * 描述：ElegantBus
 * Copyright (c) 2020
 * ************************************************************
 */
/*|| it.name == 'main'*//*
) {
                    println("eeeeeeee = " + it.java.sourceFiles.asList())
                    from it.java.sourceFiles
                }
            }
            destinationDirectory.set(project.file("$buildDir/$libsDirName/${variant.flavorName}"))
        }

        */
/* // Javadoc
         def javadocTask = project.tasks.create(name: "aaJavadoc${variant.name.capitalize()}", type: Javadoc, dependsOn: assembleDps) {
             source += android.sourceSets.main.java.srcDirs
             source += variant.sourceSets.java.sourceFiles
             // aidl 路径
             source += "$buildDir/generated/aidl_source_output_dir/"
             classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
             classpath += variant.javaCompileProvider.get().classpath
             classpath += configurations.compile
             //            println("destinationDir 1 = " + destinationDir)
             destinationDir = file("build/docs/javadoc/" + variant.flavorName)
             //            println("destinationDir 2 = " + destinationDir)
 //            if (Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
             options.addStringOption('Xdoclint:none', '-quiet')
 //            }
             options {
                 // 语言
                 locale 'en_US'
                 encoding 'UTF-8'
                 charSet 'UTF-8'
                 links "http://docs.oracle.com/javase/8/docs/api"
             }
             failOnError false
             variant.sourceSets.each {
                 if (it.name == "main" || it.name == variant.flavorName) {
                     source += it.java.sourceFiles
                 }
             }
         }

         def javadocJarTask = project.tasks.create(name: "aaJavadocJar${variant.name.capitalize()}", type: Jar, dependsOn: javadocTask) {
             archiveBaseName.set(project.parent.name + "-" + project.name)
             archiveAppendix.set(variant.flavorName)
             archiveClassifier.convention('javadoc')
             archiveClassifier.set('javadoc')
             from javadocTask.destinationDir
         }
         artifacts {
             archives(bundleTask.archivePath) {
                 classifier variant.flavorName
                 builtBy bundleTask
                 name = project.name
             }
             archives sourcesJarTask
             archives javadocJarTask
         }*//*

    }
}
if (isLocalMaven) {
//    apply from: "${project.rootDir}/config-local-maven.gradle"
} else {
    apply plugin: 'com.github.dcendents.android-maven'
    group = 'com.github.codyer'
}*/
